name: router-switch-web-lab

topology:
    nodes:
        router:
            kind: linux
            image: frrouting/frr:latest
            binds:
                - ./config/routers/init.sh:/config/init.sh
                - ./config/routers/frr.conf:/etc/frr/frr.conf
            exec:
                - /usr/lib/frr/frrinit.sh start

        switch:
            kind: linux
            image: frrouting/frr:latest
            binds:
                - ./config/switches:/etc/frr
            cmd: sh /etc/frr/config.switch2.sh

        web1:
            kind: linux
            image: alpine:latest
            binds:
                - ./config/servers/frontend:/frontend
                - ./config/servers/web1.c:/config/web1.c
                - ./config/servers/webserver.h:/config/webserver.h
                - ./config/servers/config.web1.sh:/config/config.web.sh
            cmd: sh /config/config.web.sh # sh -c "apk add nginx && sh /config/config.web.sh"

        web2:
            kind: linux
            image: alpine:latest
            binds:
                - ./config/servers/frontend:/frontend
                - ./config/servers/web1.c:/config/web1.c
                - ./config/servers/webserver.h:/config/webserver.h
                - ./config/servers/config.web2.sh:/config/config.web.sh
            cmd: sh /config/config.web.sh

        web3:
            kind: linux
            image: alpine:latest
            binds:
                - ./config/servers/frontend:/frontend
                - ./config/servers/web1.c:/config/web1.c
                - ./config/servers/webserver.h:/config/webserver.h
                - ./config/servers/config.web3.sh:/config/config.web.sh
            cmd: sh /config/config.web.sh

        protected_pc:
            kind: linux
            image: ubuntu:20.04
            binds:
                - ./config/servers/config.ppc.sh:/protected_pc.sh
            cmd: sh /protected_pc.sh

        loadbalancer:
            kind: linux
            image: alpine:latest
            binds:
                - ./config/servers/haproxy.cfg:/etc/haproxy/haproxy.cfg
                - ./config/servers/start-haproxy.sh:/start-haproxy.sh
            cmd: sh /start-haproxy.sh
            ports:
                - 8080:80 # expose port 80 of the load balancer to port 8080 on the host

    links:
        - endpoints: ["router:eth1", "switch:eth1"]
        - endpoints: ["switch:eth2", "web1:eth1"]
        - endpoints: ["switch:eth3", "web2:eth1"]
        - endpoints: ["switch:eth4", "loadbalancer:eth1"]
        - endpoints: ["switch:eth5", "web3:eth1"]
        - endpoints: ["switch:eth6", "protected_pc:eth1"]
